{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addPerson","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","persons","removePerson","map","person","key","id","name","number","onClick","baseUrl","axios","get","then","response","data","newObject","post","put","delete","Notification","notification","className","message","App","useState","setNewName","setNewNumber","setFilter","setPersons","setMessage","useEffect","personService","personsToShow","toLowerCase","includes","showNotification","setTimeout","event","target","preventDefault","existing","find","window","confirm","updatedPerson","catch","error","createdPerson","concat","console","log","toRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96946bbc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Filter = ({ filter, handleFilterChange }) => (\r\n  <form>\r\n    <div>Filter shown with: <input value={filter} onChange={handleFilterChange}/></div>\r\n  </form>\r\n)\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        Name: <input value={props.newName} onChange={props.handleNameChange}/>\r\n      </div>\r\n      <div>\r\n        Number: <input value={props.newNumber} onChange={props.handleNumberChange}/>\r\n      </div>\r\n      <div>\r\n      <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Persons = ({persons, removePerson}) => (\r\n  <>\r\n      {persons.map(person =>\r\n          <p key={person.id}>{person.name} {person.number}\r\n            <button onClick={() => removePerson(person.id)}>Delete</button>\r\n          </p>\r\n      )}\r\n  </>\r\n)\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n  if (notification === null) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <div className={notification.type}>\r\n      {notification.message}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter] = useState('')\n  const [persons, setPersons] = useState([]);\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((data) => {\n        setPersons(data)\n      })\n\n  }, [])\n\n  const personsToShow = persons\n    .filter((person) => person\n      .name.toLowerCase()\n      .includes(filter.toLowerCase()))\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existing = persons.find(person => person.name === newName)\n    if (existing) {\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\n      if (ok) {\n        personService.update(existing.id, {\n          name: existing.name,\n          number:newNumber\n        }).then(updatedPerson => {\n          setPersons(persons.map(person => person.id !== existing.id ? person : updatedPerson))\n          showNotification(`${updatedPerson.name} updated`)\n        }).catch(error => {\n            showNotification(`Information of ${newName} has already been removed from server`, 'error')\n          })\n      }\n\n    } else {\n      personService.create({\n        name: newName,\n        number: newNumber   \n      }).then(createdPerson => {\n        setPersons(persons.concat(createdPerson))\n        showNotification(`${createdPerson.name} added`)\n      })\n      .catch(error => {\n        console.log(error.response.data)\n        showNotification(`${error.response.data.error} `, 'error')\n      })\n\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const removePerson = (id) => {\n    const toRemove = persons.find(person => person.id === id)\n    const ok = window.confirm(`Delete ${toRemove.name}`)\n    if (ok) {\n      personService.remove(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          showNotification(`${toRemove.name} deleted`)\n        })\n        .catch(() => {\n          setPersons(persons.filter(person => person.id !== id))\n          showNotification(`${toRemove.name} has already been removed from server.`, 'error')\n        })\n    }\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const showNotification = (message, type='success') => {\n    setMessage({message, type})\n    setTimeout(() => {setMessage(null)}, 4000)\n  }\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification notification={message} />\n      <Filter\n        filter={filter}\n        handleFilterChange={handleFilterChange}\n      />\n      <h2>Add new number</h2>\n      <PersonForm\n        addPerson={addPerson}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        newName={newName}\n      />\n      \n      <h2>Numbers</h2>\n        <Persons persons={personsToShow}\n        removePerson={removePerson}\n      />\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}